############## Created by de.microtema:github-workflow-maven-plugin ############
#++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++#
# Files under .github/workflows folder are generated and should not be edited. #
################################################################################
name: '[DEV] Secure Password Exchange'
on:
  push:
    branches:
      - develop
env:
  APP_NAME: "secure-password-exchange"
  APP_DISPLAY_NAME: "Secure Password Exchange"
  GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
  NODE_VERSION: "16"
  VERSION: "1.0.0-SNAPSHOT"
jobs:
  versioning:
    name: Versioning
    runs-on: [ self-hosted ]
    needs: [ ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Node: Setup'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'NPM: versions'
        run: echo TBD
  
  compile:
    name: Compile
    runs-on: [ self-hosted ]
    needs: [ versioning ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Node: Setup'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'NPM: install'
        run: npm install --force
  
  security-check:
    name: Security Check
    runs-on: [ self-hosted ]
    needs: [ compile ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Node: Setup'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'NPM: install'
        run: npm install --force
      - name: 'NPM: security-check'
        run: npm run security-check
  unit-test:
    name: Unit Test
    runs-on: [ self-hosted ]
    needs: [ compile ]
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Node: Setup'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'NPM: install'
        run: npm install --force
      - name: 'NPM: test'
        run: npm test
  build:
    name: Build
    runs-on: [ self-hosted ]
    needs: [ unit-test ]
    env:
      BUILD_DIR: build
      BUILD_APP_DIR: build
      STAGE_NAME: dev
    steps:
      - name: 'Checkout'
        uses: actions/checkout@v3
      - name: 'Node: Setup'
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}
      - name: 'NPM: install'
        run: npm install --force
      - name: 'NPM: build'
        run: npm run build:$STAGE_NAME
      - name: 'Artifact: prepare'
        run: |
          mkdir -p artifact/$BUILD_DIR
          cp -r $BUILD_DIR/* artifact/$BUILD_DIR/
      - name: 'Git: info'
        run: |
          echo '{ "commitId": "'${GITHUB_SHA}'", "branch": "${{ env.VERSION }}" }' > artifact/$BUILD_DIR/$BUILD_APP_DIR/git-info.json
      - name: 'Artifact: upload'
        uses: actions/upload-artifact@v2
        with:
          name: dist-artifact
          path: artifact
  deployment:
    name: 'Deployment'
    runs-on: [ self-hosted ]
    needs: [ build ]
    env:
      BUILD_DIR: build
      S3_BUCKET: dev
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
          aws-access-key-id: ${{ AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ AWS_SECRET_ACCESS_KEY }}
      - name: 'Artifact: download'
        uses: actions/download-artifact@v2
        with:
          name: dist-artifact
      - name: 'AWS: S3 Sync'
        run: aws s3 sync ./$BUILD_DIR/* $S3_BUCKET
  readiness:
    name: 'Readiness Check'
    runs-on: [ self-hosted ]
    needs: [ deployment ]
    timeout-minutes: 15
    env:
      S3_BUCKET: dev
    steps:
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: eu-central-1
          aws-access-key-id: ${{ AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ AWS_SECRET_ACCESS_KEY }}
      - name: 'Shell: readiness'
        run: while [[ "$(aws s3 cp $S3_BUCKET/git-info.json - | jq -r '.commitId')" != "$GITHUB_SHA" ]]; do sleep 10; done
